repeat task.wait() until game:IsLoaded()
UserSettings():GetService('UserGameSettings').MasterVolume = 0;
settings().Rendering.QualityLevel = 1;
game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.Chat,false)
game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList,false)
game.CoreGui:FindFirstChild("RobloxGui").Enabled = false
repeat task.wait() until game.PlaceId ~= nil
repeat wait() until game.Players.LocalPlayer
repeat task.wait() until not game.Players.LocalPlayer.PlayerGui:FindFirstChild("__INTRO")
repeat task.wait() until game:GetService("Players").LocalPlayer and game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
if game.PlaceId == 8737899170 or game.PlaceId == 16498369169 then
    local map = game:GetService("Workspace"):FindFirstChild('Map') or game:GetService("Workspace"):FindFirstChild('Map2')
    repeat task.wait() until #map:GetChildren() >= 25
elseif game.PlaceId == 15502339080 then
    repeat task.wait() until game:GetService("Workspace").__THINGS and game:GetService("Workspace").__DEBRIS
else
    print("wtf r u doing? what game r u even on dumb fuck")
end

local save = require(game:GetService("ReplicatedStorage").Library.Client.Save)

local function instanceControl(inst1, inst, ctrl)
    repeat
        if ctrl then
            if not workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild(inst) then break end
        else
            if workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild(inst) then break end
        end

        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = inst1.CFrame
        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, inst1, 0)
        wait()
        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, inst1, 1)
        task.wait(3)
    until ctrl and not workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild(inst) or workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild(inst)
end

game.ReplicatedStorage.Network.World1Teleport:InvokeServer()

task.wait()

task.spawn(function()
    local VirtualInputManager = game:GetService("VirtualInputManager")

	while task.wait() do
        VirtualInputManager:SendKeyEvent(true, "Space", false, game)
        task.wait(.2)
        VirtualInputManager:SendKeyEvent(false, "Space", false, game)
        task.wait(300)
	end
	
end)	

task.spawn(function()
    while task.wait(10) do
        if not game:GetService("Workspace")["__THINGS"]["__INSTANCE_CONTAINER"].Active:FindFirstChild("FlowerGarden") then
            print('Teleporting to garden')
            instanceControl(workspace.__THINGS.Instances.FlowerGarden.Teleports.Enter, "FlowerGarden", false)
            task.wait(3)
            game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-450.45263671875, 110.33782958984375, -1399.4224853515626)
            task.wait(3)
        end
        break
    end
end)

task.spawn(function()
    local Remote = game.ReplicatedStorage.Network.Instancing_InvokeCustomFromClient
    while wait(1) do
        for i = 1, 10 do
            Remote:InvokeServer("FlowerGarden", "PurchaseSlot", i)
            Remote:InvokeServer("FlowerGarden", "PlantSeed", i, "Diamond")
            Remote:InvokeServer("FlowerGarden", "WaterSeed", i)
            Remote:InvokeServer("FlowerGarden", "InstaGrowSeed", i)
            Remote:InvokeServer("FlowerGarden", "ClaimPlant", i)
        end
    end
end)

task.spawn(function()
    while wait(1) and getgenv().autoCollectBag do
        for _, lootbag in pairs(game:GetService("Workspace").__THINGS:FindFirstChild("Lootbags"):GetChildren()) do
            if lootbag then
                game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Lootbags_Claim"):FireServer(unpack( { [1] = { [1] = lootbag.Name, }, } ))
                lootbag:Destroy()
                task.wait()
            end
        end

        game:GetService("Workspace").__THINGS:FindFirstChild("Lootbags").ChildAdded:Connect(function(lootbag)
            task.wait()
            if lootbag then
                game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Lootbags_Claim"):FireServer(unpack( { [1] = { [1] = lootbag.Name, }, } ))
                lootbag:Destroy()
            end
        end)
    end
end)
